<div id="drahak-panel">
	<h1>Drahak Restful panel</h1>

	<ul class="drahak-tab">
		<li class="active"><a href="#drahak-panel-resources">Resources</a></li>
		<li><a href="#drahak-panel-request-builder">Request builder</a></li>
	</ul>
	<div class="drahak-clear"></div>

	<!-- Test secured resource builder -->
	<div class="drahak-tab-pane" id="drahak-panel-request-builder">

		<p><strong>Private key</strong>:</p>
		<input type="text" name="string" id="drahak-data-private" value="<?php echo $esc($privateKey); ?>" />

		<p>
			<strong>Request data</strong>:
			<span style="float: right">
				<label for="drahak-data-timestamp"><strong>append timestamp</strong></label>
				<input type="checkbox" id="drahak-data-timestamp" />
			</span>
		</p>
		<table style="width: 100%">
			<tr>
				<th style="width: 48.5%;">key</th>
				<th>value</th>
			</tr>
		</table>
		<div class="drahak-container">
			<table style="width: 100%" id="drahak-data-table"></table>
		</div>

		<hr />

		<p><label for="drahak-data-string"><strong>Data string</strong>:</label></p>
		<input type="text" name="string" id="drahak-data-string" readonly="readonly" />

		<p><label for="drahak-data-encoded"><strong>Authentication hash</strong>:</label></p>
		<input type="text" name="authtoken" id="drahak-data-encoded" readonly="readonly" />
	</div>

	<!-- Data string representation -->
	<div class="drahak-tab-pane shown" id="drahak-panel-resources">
		<table>
			<thead>
			<tr>
				<th>Method</th>
				<th>URL Mask</th>
				<th>Presenter</th>
				<th>Action</th>
			</tr>
			</thead>
			<tbody>
			<?php foreach ($routes as $route) : ?>
				<?php foreach ($methods as $method => $name) : ?>
				<?php if (!$route->isMethod($method)) continue; ?>
				<?php if ($route->actionDictionary && !isset($route->actionDictionary[$method])) continue; ?>
				<tr>
					<th><?php echo $esc($name); ?></th>
					<td><pre><?php echo $esc($route->mask); ?></pre></td>
					<td><?php echo $route->defaults['presenter']; ?></td>
					<td>
						<?php
						echo isset($route->actionDictionary[$method]) ?
							$route->actionDictionary[$method] :
							$route->defaults['action'];
						?>
					</td>
				</tr>
				<?php endforeach; ?>
			<?php endforeach; ?>
			</tbody>
		</table>
	</div>
</div>

<style type="text/css" scoped>
	#drahak-panel {
		min-width: 600px;
	}

	#drahak-panel hr {
		background: #eee;
		height: 1px;
		width: 100%;
		border: none;
		margin: 10px 0;
	}

	#drahak-panel input[type="text"] {
		background: #fff;
		border: 1px solid #eee;
		padding: 2px 5px;
		width: 100%;
	}

	#drahak-panel input[readonly] {
		background: #f9f9f9;
		cursor: not-allowed;
	}

	#drahak-data-table td {
		width: 50%;
	}

	#drahak-data-table input {
		padding: 0 5px !important;
	}

	#drahak-panel .drahak-container {
		height: 200px;
		overflow-y: scroll;
		position: relative;
		border: 1px solid #eee;
	}

	#drahak-panel .drahak-clear {
		clear: both;
	}

	#drahak-panel ul.drahak-tab {
		height: 35px;
		list-style: none !important;
		margin: 0 0 10px !important;
		border-bottom: 1px solid #ddd;
	}

	#drahak-panel ul.drahak-tab li {
		float: left;
		margin-right: 5px;
	}

	#drahak-panel ul.drahak-tab li a {
		display: block;
		background: #fff;
		border: 1px solid #fff;
		border-bottom: 1px solid #ddd;
		padding: 8px;
		-webkit-border-radius: 5px 5px 0 0;
		-moz-border-radius: 5px 5px 0 0;
		border-radius: 5px 5px 0 0;
	}

	#drahak-panel ul.drahak-tab li a:hover {
		background: #eee;
	}

	#drahak-panel ul.drahak-tab li.active a {
		border: 1px solid #ddd;
		border-bottom: 1px solid #fff;
		background: #fff;
	}

	#drahak-panel ul.drahak-tab li a:hover {
		color: #444;
	}

	#drahak-panel .drahak-tab-pane {
		display: none;
	}

	#drahak-panel .drahak-tab-pane.shown {
		display: block;
	}
</style>
<script type="text/javascript">
/*
 CryptoJS v3.1.2
 code.google.com/p/crypto-js
 (c) 2009-2013 by Jeff Mott. All rights reserved.
 code.google.com/p/crypto-js/wiki/License
 */
var CryptoJS=CryptoJS||function(h,r){var k={},l=k.lib={},n=function(){},f=l.Base={extend:function(a){n.prototype=this;var b=new n;a&&b.mixIn(a);b.hasOwnProperty("init")||(b.init=function(){b.$super.init.apply(this,arguments)});b.init.prototype=b;b.$super=this;return b},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},
	j=l.WordArray=f.extend({init:function(a,b){a=this.words=a||[];this.sigBytes=b!=r?b:4*a.length},toString:function(a){return(a||s).stringify(this)},concat:function(a){var b=this.words,d=a.words,c=this.sigBytes;a=a.sigBytes;this.clamp();if(c%4)for(var e=0;e<a;e++)b[c+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((c+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)b[c+e>>>2]=d[e>>>2];else b.push.apply(b,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,b=this.sigBytes;a[b>>>2]&=4294967295<<
		32-8*(b%4);a.length=h.ceil(b/4)},clone:function(){var a=f.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var b=[],d=0;d<a;d+=4)b.push(4294967296*h.random()|0);return new j.init(b,a)}}),m=k.enc={},s=m.Hex={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++){var e=b[c>>>2]>>>24-8*(c%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join("")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c+=2)d[c>>>3]|=parseInt(a.substr(c,
		2),16)<<24-4*(c%8);return new j.init(d,b/2)}},p=m.Latin1={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++)d.push(String.fromCharCode(b[c>>>2]>>>24-8*(c%4)&255));return d.join("")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c++)d[c>>>2]|=(a.charCodeAt(c)&255)<<24-8*(c%4);return new j.init(d,b)}},t=m.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error("Malformed UTF-8 data");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},
	q=l.BufferedBlockAlgorithm=f.extend({reset:function(){this._data=new j.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=t.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,d=b.words,c=b.sigBytes,e=this.blockSize,f=c/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;c=h.min(4*a,c);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);b.sigBytes-=c}return new j.init(g,c)},clone:function(){var a=f.clone.call(this);
		a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:f.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,d){return(new a.init(d)).finalize(b)}},_createHmacHelper:function(a){return function(b,d){return(new u.HMAC.init(a,
	d)).finalize(b)}}});var u=k.algo={};return k}(Math);
/*
 CryptoJS v3.1.2
 code.google.com/p/crypto-js
 (c) 2009-2013 by Jeff Mott. All rights reserved.
 code.google.com/p/crypto-js/wiki/License
 */
var CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},
	r=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<
		32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join("")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,
		2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join("")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error("Malformed UTF-8 data");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},
	u=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);
		a._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,
	d)).finalize(c)}}});var t=f.algo={};return f}(Math);
(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=
	c[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;
	d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);
(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;"string"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=
	this._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();
</script>
<script type="text/javascript">

	var Drahak = Drahak || {};

	Drahak.Table = (function() {
		'use strict';

		/**
		 * Editable Table
		 * @param {HTMLElement} element
		 * @constructor
		 */
		var Table = function(element) {
			this.element = element;
			this._listeners = [];
		};

		/**
		 * Table data change listeners
		 * @type {Array}
		 * @private
		 */
		Table.prototype._listeners = [];

		/**
		 * Add data cahnge listener
		 * @param {Function} fn
		 * @returns {Table}
		 */
		Table.prototype.addListener = function( fn ) {
			this._listeners.push(fn);
			return this;
		};

		/**
		 * Trigger table data listeners
		 * @returns {Table}
		 */
		Table.prototype.triggerListeners = function() {
			var data = this.fetchData();
			for (var i in this._listeners) {
				this._listeners[i].call(this, data);
			}
			return this;
		};

		/**
		 * Fetch data
		 * @returns {{}}
		 */
		Table.prototype.fetchData = function() {
			var data = {};
			var tr = this.element.getElementsByTagName('tr');
			for (var i = 0; i < tr.length; i++) {
				var td = tr[i].getElementsByTagName('td');
				var key = td[0].getElementsByTagName('input')[0].value;
				var value = td[1].getElementsByTagName('input')[0].value;
				if (!key) continue;
				data[key] = value;
			}
			return data;
		};

		/**
		 * Add row to table
		 * @returns {HTMLElement}
		 */
		Table.prototype.addRow = function() {
			var table = this;
			var tr = document.createElement('tr');
			var key = document.createElement('td');
			var value = document.createElement('td');
			var keyInput = document.createElement('input');
			var valueInput = document.createElement('input');
			keyInput.setAttribute('type', 'text');
			valueInput.setAttribute('type', 'text');
			valueInput.addEventListener('focus', function() {
				var trs = table.element.getElementsByTagName('tr');
				var parentRow = this.offsetParent.parentNode;
				var lastRow = trs[trs.length-1];
				if (parentRow === lastRow) {
					table.addRow();
				}
			}, false);

			keyInput.addEventListener('change', function() {
				if (!this.value) {
					var row = this.offsetParent.parentNode;
					table.element.removeChild(row);
				}
			}, false);

			var _update = function() { table.triggerListeners(); };
			valueInput.addEventListener('keyup', _update, false);
			keyInput.addEventListener('keyup', _update, false);

			key.appendChild(keyInput);
			value.appendChild(valueInput);

			tr.appendChild(key);
			tr.appendChild(value);

			this.element.appendChild(tr);
			return tr;
		};

		return Table;
	})();

	Drahak.TabControl = (function() {
		'use strict';

		var tabs, panes;

		/**
		 * Tab control
		 * @constructor
		 */
		var TabControl = function() {
			tabs = document.querySelectorAll('.drahak-tab li');
			panes = document.querySelectorAll('.drahak-tab-pane');
		};

		/**
		 * Tab click event
		 * @param {MouseEvent} e
		 * @private
		 */
		TabControl.prototype._click = function( e ) {
			var link = this.getElementsByTagName('a')[0];
			if (!link.hasAttribute('href')) {
				throw new Error('Clicked tab has no target element. Set href attribute to the link');
			}
			var target = document.querySelector(link.getAttribute('href'));
			for (var i = 0; i < panes.length; i++) {
				panes[i].className = 'drahak-tab-pane';
			}
			for (var i = 0; i < tabs.length; i++) {
				tabs[i].className = '';
			}
			target.className = 'drahak-tab-pane shown';
			this.className = 'active';
		};

		/**
		 * Apply tab control
		 */
		TabControl.prototype.apply = function() {
			for (var i = 0; i < tabs.length; i++) {
				tabs[i].addEventListener('click',this._click, false);
			}
		};

		return TabControl;

	})();

	(function() {
		'use strict';
		var dataStringElement = document.getElementById('drahak-data-string');
		var encodedElement = document.getElementById('drahak-data-encoded');
		var secretElement = document.getElementById('drahak-data-private');
		var timestampElement = document.getElementById('drahak-data-timestamp');

		var tab = new Drahak.TabControl;
		tab.apply();

		var table = new Drahak.Table(document.getElementById('drahak-data-table'));
		table.addRow();
		table.addListener(function( data ) {
			var text = timestampElement.checked ? '&<?php echo $esc($requestTimeKey); ?>=' + (new Date()).getTime() : '';
			for (var key in data) {
				text += '&' + key + '=' + encodeURIComponent(data[key]);
			}
			text = text.substring(1);
			dataStringElement.value = text;
			encodedElement.value = CryptoJS.HmacSHA256(text, secretElement.value);
		});

		/**
		 * Trigger table data listeners
		 * @private
		 */
		var _trigger = function() {
			table.triggerListeners();
		};

		secretElement.addEventListener('keyup', _trigger, false);
		timestampElement.addEventListener('change', _trigger, false);

	})();

</script>